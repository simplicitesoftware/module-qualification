var QualPostTraining=QualPostTraining||(function($){var app;function render(params,qualTemplate){try{if(typeof Vue==='undefined')throw'Vue.js not available';if(!params.pub)$('#demovuejsfrontend').css('min-height','1000px');app=new Simplicite.Ajax(params.root,'uipublic');let output=[];let exams=params.exams;let tmp;let unknown=false;let exObjRowId="";let usrExObjIds=[];let examScoresTab=[];if(""==exams){unknown=true;start=new FlowForm.QuestionModel({id:'start',title:"Oups... ",content:"Il semblerait y avoir un problème avec l'affichage de votre questionnaire. Il est possible que votre token soit inexistant ou ait expiré.",type:FlowForm.QuestionType.SectionBreak,required:false,})
output.push(start);}else{start=new FlowForm.QuestionModel({id:'start',title:params.lang.start.title+" "+String.fromCodePoint("0x1F44B"),subtitle:params.lang.start.subtitle,description:params.lang.start.description,type:FlowForm.QuestionType.SectionBreak,required:true,})
output.push(start);for(let k=0;k<exams.length;k++){let input=exams[k].questions;let examTitle=exams[k].examTitle;for(let i=0;i<input.length;i++){if(input[i].type=="ENUM"){tmp=createEnumElement(input[i],exams[k]);}else if(input[i].type=="MULTI_ENUM"){tmp=createMultiEnumElement(input[i],exams[k]);}else if(input[i].type=="TXT"){tmp=createTxtElement(input[i],exams[k]);}else if(input[i].type=="QST_BREAK"){tmp=createBreakElement(exams[k]);}
output.push(tmp);}}}
let languageParams=new FlowForm.LanguageModel({enterKey:params.lang.ffModel.enterKey,shiftKey:params.lang.ffModel.shiftKey,continue:params.lang.ffModel.continue,pressEnter:params.lang.ffModel.pressEnter,otherPrompt:params.lang.ffModel.otherPrompt,submitText:params.lang.ffModel.submitText,placeholder:params.lang.ffModel.placeholder,percentCompleted:params.lang.ffModel.percentCompleted,multipleChoiceHelpTextSingle:params.lang.ffModel.multipleChoiceHelpTextSingle,longTextHelpText:params.lang.ffModel.longTextHelpText});new Vue({el:'#app',template:qualTemplate,data:function(){return{loading:false,scored:false,submitted:false,completed:false,language:languageParams,questions:output,isValid:!unknown,generic:params.generic,params:params}},methods:{onAnswer(qA){if(qA.type==FlowForm.QuestionType.SectionBreak&&qA.id.includes("exam")){var usrExObj=app.getBusinessObject("QualUserExam");usrExObj.resetFilters();usrExObj.getForCreate(function(){usrExObj.item.qualUsrexamUsrId=params.userId;usrExObj.item.qualUsrexamExamId=qA.examId;usrExObj.create(function(){exObjRowId=usrExObj.getRowId();usrExObjIds.push(exObjRowId);},usrExObj.item);});}
if(qA.type!==FlowForm.QuestionType.SectionBreak){let submittedValue=qA.multiple?getAnwserFormArray(qA.answer):qA.answer;var usrAnswerObj=app.getBusinessObject("QualExUsr");usrAnswerObj.resetFilters();usrAnswerObj.search(function(){usrAnswerObj.getForUpdate(function(){usrAnswerObj.item.qualExusrSubmitted=true;usrAnswerObj.item.qualExusrAnswer=submittedValue;usrAnswerObj.update();},usrAnswerObj.list[0].row_id);},{qualExusrUsrexamId:exObjRowId,qualExusrExamexId__qualExamexExId__qualExId:qA.id});}},onComplete(completed,questionList){this.completed=completed
if(this.generic){this.onQuizSubmit();}},onQuizSubmit(){this.$refs.flowform.submitted=true
this.submitted=true
if(!unknown){this.validateExams();exams.forEach(exam=>{let examQuestions=[];this.questions.forEach(qst=>{if(qst.examId==exam.examId&&qst.type!==FlowForm.QuestionType.SectionBreak){examQuestions.push(qst);}});})
this.scored=true;this.scores=examScoresTab;}},validateExams(){this.loading=true;var obj=app.getBusinessObject("QualUserExam");obj.resetFilters();usrExObjIds.forEach(function(id){obj.getForUpdate(function(){obj.item.qualUsrexamEtat="DONE";obj.update(function(){examScoresTab.push({"examId":id,"examTitle":obj.item.qualUsrexamExamId__qualExamName,"score":obj.item.qualUsrexamScore,"total":obj.item.qualUsrexamTotalPoints});console.log(examScoresTab)});},id);});setTimeout(()=>{this.loading=false;},1000)},store(exam,qsts){this.loading=true;setTimeout(()=>{this.loading=false;},1000)},},});}catch(e){console.error('Render error: '+e.message);}
function createEnumElement(input,exam){let choices=[];let iChoices=input.enum.split("@@@");for(let j=0;j<iChoices.length;j++){let tmpChoice=new FlowForm.ChoiceOption({label:iChoices[j],});choices.push(tmpChoice);}
return new FlowForm.QuestionModel({examId:exam.examId,id:input.id,title:input.title,helpTextShow:false,type:FlowForm.QuestionType.MultipleChoice,required:true,multiple:false,options:choices,});}
function createMultiEnumElement(input,exam){let choices=[];let iChoices=input.enum.split("@@@");for(let j=0;j<iChoices.length;j++){let tmpChoice=new FlowForm.ChoiceOption({label:iChoices[j],});choices.push(tmpChoice);}
return new FlowForm.QuestionModel({examId:exam.examId,id:input.id,title:input.title,helpTextShow:false,type:FlowForm.QuestionType.MultipleChoice,required:true,multiple:true,options:choices,});}
function createTxtElement(input,exam){return new FlowForm.QuestionModel({examId:exam.examId,id:input.id,title:input.title,type:FlowForm.QuestionType.LongText,required:true});}
function createBreakElement(exam){return new FlowForm.QuestionModel({id:"exam-"+exam.examId+"-break",examId:exam.examId,title:exam.examTitle,description:exam.examDescription,type:FlowForm.QuestionType.SectionBreak,});}
function getAnwserFormArray(aArray){return aArray.toString().replaceAll(",","@@@");}}
return{render:render};})(jQuery);